/*
when there are perpendicular and diagonal move possible then appy a  check 
that same level moves are not compared ie( if(d[x2][y2]!=d[x1][y1]+1) break;)
important optimization
*/
#include<bits/stdc++.h>
#define fastio() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define pb push_back
#define MOD 1000000007
#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define FOR(a,n) for(int i=a;i<n;++i)
#define arrin(n) for(int i=0; i < n; ++i) cin>>arr[i];
#define arrout(n) for(int i=0; i < n; ++i) cout<<arr[i]<<" ";cout<<nl;
#define nl "\n"
#define mp make_pair
typedef unsigned long long ull;
typedef long long int ll;
typedef long double ld;
using namespace std;
int main()
{
  fastio();
  ll t;
  cin>>t;
  while(t--)
  {
  ll m,n;
  cin>>n>>m;
  char a[n][m];
  ll x[2],y[2];
  ll dx[8]={-1,-1,-1,0,0,1,1,1};
  ll dy[8]={-1,0,1,-1,1,-1,0,1};
  ll d[n][m];
  for(ll i=0;i<n;i++)
  {
    for(ll j=0;j<m;j++)
    {
      cin>>a[i][j];
      if(a[i][j]=='S')
      {
        x[0]=i;
        y[0]=j;
      }
      else if(a[i][j]=='F')
      {
        x[1]=i;
        y[1]=j;
      }
      d[i][j]=MOD;
    }
  }
    //cout<<x[0]<<y[0]<<endl; 
    //cout<<x[1]<<y[1]<<endl;   
    queue<pair<ll,ll>> q;
    d[x[0]][y[0]]=0;
    q.push(make_pair(x[0],y[0]));
    while(!q.empty())
    { 
      pair<ll,ll> s=q.front();
      ll x1=s.first;
      ll y1=s.second;
      q.pop();
      if(x1==x[1] && y1==y[1]) break;
      for(ll i=0;i<8;i++)
      {
        ll x2=x1+dx[i];
        ll y2=y1+dy[i];
        while(y2<m && y2>=0 && x2<n && x2>=0 && a[x2][y2]!='X')
        {
           if(d[x2][y2]==MOD)
           {
             d[x2][y2]=d[x1][y1]+1;
             q.push(mp(x2,y2));
             //cout<<x2<<" "<<y2<<" "<<d[x2][y2]<<endl;
           }
           else if(d[x2][y2]!=d[x1][y1]+1) break;  // to avoid check between same level move ie  d[x2][y2]==d[x1][y1]  (important optimization)
           x2+=dx[i];
           y2+=dy[i];
        }
      }
    }
    /*
    for(ll i=0;i<n;i++)
  {
    for(ll j=0;j<m;j++)
    {
      cout<<d[i][j]<<"\t";
    }
    cout<<endl;
  }
   */
    if(d[x[1]][y[1]]==MOD)
    cout<<-1<<endl;
    else
    cout<<d[x[1]][y[1]]<<endl;
  }
  cerr << "Time : " << (double)clock() / (double)CLOCKS_PER_SEC << "s\n";
  return 0;
}
/*
3
   3 3
   S..
   ...
   ..F
   3 3
   S..
   XX.
   F..
   3 3
   S..
   XXX
   ..F
0	1	1	
1	1	2	
1	2	1	
1
0	1	1	
1000000007	1000000007	2	
3	3	2	
3
0	1	1	
1000000007	1000000007	1000000007	
1000000007	1000000007	1000000007	
-1
Time : 0.003089s
*/